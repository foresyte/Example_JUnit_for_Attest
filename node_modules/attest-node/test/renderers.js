var fs = require('fs-extra');
var path = require('path');
var assert = require('chai').assert;


var dir = './test/tmp';
var validTestData = [];
var testResultOrig = require('./dummydata/with-violations.json');

describe('render methods', function () {
	var testData;

	beforeEach(function () {
		validTestData = [];
		for (var i=0; i <= 6; i++) {
			testData = JSON.parse(JSON.stringify(testResultOrig));
			testData.id += i;
			testData.name = (i % 2 === 0 ? 'test_a' : 'test_b');
			validTestData.push(testData);
		}
	});


	var invalidTestData = [];

	describe('renderAsHtml', function() {
		var renderAsHtml = require('../reporter/render-as-html');
		var filePathA = path.join(dir, 'test_a.html');
		var filePathB = path.join(dir, 'test_b.html');

		before(function () {
			fs.removeSync(dir);
		});

		afterEach(function () {
			fs.removeSync(dir);
		});

		it('creates a file with valid input', function () {
			renderAsHtml(validTestData, dir);

			assert(fs.existsSync(filePathB));
			assert(fs.existsSync(filePathA));

			var scriptPath = path.join(dir, 'assets/scripts.js');
			assert(fs.existsSync(scriptPath));

			var cssPath = path.join(dir, 'assets/styles.css');
			assert(fs.existsSync(cssPath));
		});

		it('does not throws with invalid input', function () {
			delete validTestData[1].findings;
			var threw = false;
			var orig = console.log;
			console.log = function () {};
			try {
				renderAsHtml(validTestData, dir);
			} catch(e) {
				threw = true;
			}
			console.log = orig;
			assert(!threw, 'expect test not to throw');
		});

	});

/*
	describe('renderAsXls', function() {
		var reportAsXls = require('../reporter/render-as-xls');

		before(function () {
			fs.removeSync(dir);
		});

		afterEach(function () {
			fs.removeSync(dir);
		});

		it('creates a file with valid input', function () {
			reportAsXls(validTestData, dir);
			// So it seems our excel writer is async, but doesn't have a callback
			setTimeout(function () {
				assert(fs.existsSync(path.join(dir, 'attest-violations.xslx')));
			}, 300);
		});

		it('throws with invalid input', function () {
			delete validTestData[1].findings;
			var threw = false;
			try {
				reportAsXls(validTestData, dir);
			} catch(e) {
				threw = true;
			}
			assert(threw, 'expect test to throw');
		});

		it('does not create a file with invalid input', function () {
			delete validTestData[1].findings;
			try {
				reportAsXls(validTestData, dir);
			} catch(e) { }
			setTimeout(function () {
				assert(!fs.existsSync(path.join(dir, 'attest-violations.xslx')));
			}, 300);
		});
	});*/

	describe('renderAsJunitXml', function() {
		var renderAsJunitXml = require('../reporter/render-as-junit-xml');

		before(function () {
			fs.removeSync(dir);
		});

		afterEach(function () {
			fs.removeSync(dir);
		});

		it('creates a file with valid input', function () {
			renderAsJunitXml(validTestData, dir);
			// So it seems our excel writer is async, but doesn't have a callback
			assert(fs.existsSync(path.join(dir, 'attest-results.xml')));
		});

		it('throws with invalid input', function () {
			delete validTestData[1].findings;
			var threw = false;
			try {
				renderAsJunitXml(validTestData, dir);
			} catch(e) {
				threw = true;
			}
			assert(threw, 'expect test to throw');
		});

		it('does not create a file with invalid input', function () {
			delete validTestData[1].findings;
			try {
				renderAsJunitXml(validTestData, dir);
			} catch(e) { }

			assert(!fs.existsSync(path.join(dir, 'attest-results.xml')));
		});

	});

});