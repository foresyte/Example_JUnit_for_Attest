//jshint maxcomplexity: 12, maxstatements: false, camelcase: false
module.exports = function (grunt) {
  'use strict';

  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-connect');
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-mocha-test');
  grunt.loadTasks('node_modules/attest-standards');

  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    watch: {
      files: ['index.js', 'test/**/*.js', 'Gruntfile.js'],
    },
    mochaTest: {
      test: {
        options: {
          reporter: 'spec',
          clearRequireCache: true // Optionally clear the require cache before running tests (defaults to false)
        },
        src: ['test/**/*.js']
      }
    },
    connect: {
      test: {
        options: {
          hostname: '0.0.0.0',
          port: grunt.option('port') || 9876,
          base: ['.']
        }
      }
    },
    standards: {
      all: {
        dest: 'standards',
        standards: [{
          id: '508',
          file: '508.js'
        },{
          id: 'wcag2',
          file: 'default.js'
        },{
          id: 'devmin',
          file: 'dev-min.js'
        },{
          id: 'testmin',
          file: 'test-min.js'
        }]
      }
    },
    jshint: {
      all: ['Gruntfile.js', 'index.js', 'test/**/*.js', 'reporter/**/*.js'],
      options: {
        ignores: ['reporter/templates/**/*.js'],
        jshintrc: true
      }
    }
  });

  grunt.registerTask('default', ['build', 'test']);

  grunt.registerTask('build', ['standards']);

  grunt.registerTask('test', ['build', 'connect', 'mochaTest']);
};
